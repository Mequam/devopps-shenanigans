AWSTemplateFormatVersion: 2010-09-09

Parameters:
  DBUsername:
    Description: Primary user of the database
    Type: String
    AllowedPattern: '[a-z]+'
  
  DBPassword:
    Description: Password to access the database
    Type: String
  
  DBPort:
    Description: Database Port Number
    Type: String
    AllowedPattern: "[0-9]*"

  VPCCidr:
    Description: vpc Cider ip range
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '^(\d{1,3}\.){3}\d{1,3}\/\d{1,2}$'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  PublicSubnetCidr:
    Description: Public Subnet ipv4 address range
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '^(\d{1,3}\.){3}\d{1,3}\/\d{1,2}$'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.


  PublicSubnetCidr2:
    Description: Public Subnet ipv4 address range
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '^(\d{1,3}\.){3}\d{1,3}\/\d{1,2}$'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.


  PrivateDBSubnetCidr:
    Description: Private Subnet ipv4 for db cluster
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '^(\d{1,3}\.){3}\d{1,3}\/\d{1,2}$'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.


  PrivateSubnetCidr:
    Description: Private Subnet ipv4 address range
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '^(\d{1,3}\.){3}\d{1,3}\/\d{1,2}$'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  AvailabilityZone1:
    Description: Primary availability zone, used for public and one private subnet
    Type: String

  AvailabilityZone2:
    Description: AZ used for the db cluster to provide constistancy
    Type: String


Resources:
  AngularVoteApp:
    Type: 'AWS::S3::Bucket'
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref AngularVoteApp
                - /*
      Bucket: !Ref AngularVoteApp

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsHostnames: false
      EnableDnsSupport: false
      Tags:
        - Key: "BatchID"
          Value: "DevOps"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: "BatchID"
          Value: "DevOps"

  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubNet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZone1
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref PublicSubnetCidr
      VpcId: !Ref VPC
      Tags:
        - Key: "BatchID"
          Value: "DevOps"
  
  PublicSubNet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZone1
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref PublicSubnetCidr2
      VpcId: !Ref VPC
      Tags:
        - Key: "BatchID"
          Value: "DevOps"


  PrivateSubNet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZone1
      CidrBlock: !Ref PrivateSubnetCidr
      VpcId: !Ref VPC
      Tags:
        - Key: "BatchID"
          Value: "DevOps"


  PrivateSubNet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZone2
      CidrBlock: !Ref PrivateDBSubnetCidr
      VpcId: !Ref VPC
      Tags:
        - Key: "BatchID"
          Value: "DevOps"
  DBSubnetGroup: 
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: subnet group for postgres db
      SubnetIds: 
        - !Ref PrivateSubNet2
        - !Ref PrivateSubNet1
      Tags: 
        - Key: "BatchID"
          Value: "DevOps"

  #let any host from the given subnet talk to us
  SecurityGroupDatabase:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'vote-app-aurora-database-sg'
      GroupName: 'vote-app-aurora-database-sg'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: !Ref PublicSubnetCidr
          FromPort: !Ref DBPort
          ToPort: !Ref DBPort
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: '0.0.0.0/0'

  AuroraDBCluster:
    Type: 'AWS::RDS::DBCluster'
    Properties:
      DBClusterIdentifier: 'vote-app-postgres-db'
      DatabaseName: 'vote'
      DBSubnetGroupName: !Ref DBSubnetGroup
      #DBClusterParameterGroupName: !Ref AuroraPostgresParameterGroup
      DeletionProtection: false
      Engine: 'aurora-postgresql'
      EngineMode: 'provisioned'
      EngineVersion: "16.6"
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      Port: !Ref DBPort
      StorageEncrypted: false
      VpcSecurityGroupIds:
        - !Ref SecurityGroupDatabase

  WriterInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      Engine: 'aurora-postgresql'
      DBClusterIdentifier: !Ref AuroraDBCluster
      DBInstanceClass: 'db.r5.large'
      AllowMajorVersionUpgrade: false
      EnablePerformanceInsights: false
      PubliclyAccessible: false



Outputs:
  WebsiteURL:
    Value: !GetAtt 
      - AngularVoteApp
      - WebsiteURL
    Description: URL for website hosted on S3
  S3BucketSecureURL:
    Value: !Join 
      - ''
      - - 'https://'
        - !GetAtt 
          - AngularVoteApp
          - DomainName
    Description: Name of S3 bucket to hold website content
